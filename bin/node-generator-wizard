#!/usr/bin/env node

const program = require('commander');
const wizard = require('../src/wizard');
const WizardType = require('../src/wizardType');
const chalk = require('chalk');

let wizardType;
let componentName = null;

program
  .usage('[type] [name]')
  .arguments('[type] [name]')
  .action((type, name) => {
    wizardType = type;
    componentName = name;
  })
  .parse(process.argv);

const types = Object.keys(WizardType).map((key) => WizardType[key]);

if (wizardType && !types.includes(wizardType)) {
  console.error(chalk.red('Type doesn\'t exist'));
  process.exit(1);
}
else if (!wizardType) {
  wizardType = WizardType.WIZARD;
}

wizard(wizardType, componentName);




